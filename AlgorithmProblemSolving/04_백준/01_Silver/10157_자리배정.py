'''
자리배정
https://www.acmicpc.net/problem/10157
백준 실버4 10157

어떤 공연장에는 가로로 C개, 세로로 R개의 좌석이 C×R격자형으로 배치되어 있다. 각 좌석의 번호는 해당 격자의 좌표 (x,y)로 표시된다.

예를 들어보자. 아래 그림은 가로 7개, 세로 6개 좌석으로 구성된 7×6격자형 좌석배치를 보여주고 있다. 그림에서 각 단위 사각형은 개별 좌석을 나타내며, 그 안에 표시된 값 (x,y)는 해당 좌석의 번호를 나타낸다. 가장 왼쪽 아래의 좌석번호는 (1,1)이며, 가장 오른쪽 위 좌석의 번호는 (7,6)이다.

(1, 6)	 	 	 	 	 	(7, 6)

 	 	 	(4, 4)	 	 	(7, 4)
(1, 3)	 	 	 	 	(6, 3)
(1, 2)
(1, 1)	(2, 1)	(3, 1)	 	 	 	(7, 1)
이 공연장에 입장하기 위하여 많은 사람이 대기줄에 서있다. 기다리고 있는 사람들은 제일 앞에서부터 1, 2, 3, 4, . 순으로 대기번호표를 받았다. 우리는 대기번호를 가진 사람들에 대하여 (1,1)위치 좌석부터 시작하여 시계방향으로 돌아가면서 비어있는 좌석에 관객을 순서대로 배정한다. 이것을 좀 더 구체적으로 설명하면 다음과 같다.

먼저 첫 번째 사람, 즉 대기번호 1인 사람은 자리 (1,1)에 배정한다. 그 다음에는 위쪽 방향의 좌석으로 올라가면서 다음 사람들을 배정한다. 만일 더 이상 위쪽 방향으로 빈 좌석이 없으면 오른쪽으로 가면서 배정한다. 오른쪽에 더 이상 빈자리가 없으면 아래쪽으로 내려간다. 그리고 아래쪽에 더 이상 자리가 없으면 왼쪽으로 가면서 남은 빈 좌석을 배정한다. 이 후 왼쪽으로 더 이상의 빈 좌석이 없으면 다시 위쪽으로 배정하고, 이 과정을 모든 좌석이 배정될 때까지 반복한다.

아래 그림은 7×6공연장에서 대기번호 1번부터 42번까지의 관객이 좌석에 배정된 결과를 보여주고 있다.

6	7	8	9	10	11	12
5	26	27	28	29	30	13
4	25	38	39	40	31	14
3	24	37	42	41	32	15
2	23	36	35	34	33	16
1	22	21	20	19	18	17
여러분은 공연장의 크기를 나타내는 자연수 C와 R이 주어져 있을 때, 대기 순서가 K인 관객에게 배정될 좌석 번호 (x,y)를 찾는 프로그램을 작성해야 한다.
'''

C, R = map(int, input().split())
K = int(input())
D = 2 * (C - 1) + 2 * (R - 1)
a = pasta = 1
sx, sy = 1, 1

def f(K):
    global C, R, D, a, sx, sy
    if C * R < K:
        print(0)
        return

    while K > a:  # 가장 가까운 한바퀴 시작하는 좌표 찾기
        a, pasta = a + D, a
        D -= 8
        sx += 1
        sy += 1
        C -= 2
        R -= 2
    if a == K:
        print(sx, sy)
        return
    elif a != pasta:
        a = pasta
        D += 8
        sx -= 1
        sy -= 1
        C += 2
        R += 2

    # 숫자 찾으면서 한바퀴 돌기
    direc = [(R, 0, 1), (C, 1, 0), (R, 0, -1), (C, -1, 0)]
    j = 0
    f, o1, o2 = direc[0]
    w = 1
    for _ in range(a, K):
        if j == f - 1:
            j = 0
            w = w % 4 + 1
            f, o1, o2 = direc[w - 1]
        sx += o1
        sy += o2
        j += 1
    print(sx, sy)

f(K)