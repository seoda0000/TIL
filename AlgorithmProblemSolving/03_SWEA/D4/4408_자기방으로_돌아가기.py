'''
4408. 자기 방으로 돌아가기 D4
https://swexpertacademy.com/main/code/problem/problemDetail.do
고등학교 학생들이 학교에서 수련회를 갔다. 수련회에 간 학생들은 친구들과 음주가무를 즐기다가 밤 12시가 되자 조교들의 눈을 피해 자기방으로 돌아가려고 한다.

제 시간에 자기방으로 돌아가지 못한 학생이 한 명이라도 발견되면 큰일나기 때문에 최단 시간에 모든 학생이 자신의 방으로 돌아가려고 한다.

숙소는 긴 복도를 따라 총 400개의 방이 다음과 같이 배열되어 있다.



모든 학생들은 현재 위치에서 자신의 방으로 돌아가려고 하는데, 만약 두 학생이 자기방으로 돌아가면서 지나는 복도의 구간이 겹치면 두 학생은 동시에 돌아갈 수 없다.

예를 들어 (방1 -> 4) 와 (방3 -> 6) 은 복도 구간이 겹치므로 한 사람은 기다렸다가 다음 차례에 이동해야 한다. 이동하는 데에는 거리에 관계없이 단위 시간이 걸린다고 하자.

각 학생들의 현재 방 위치와 돌아가야 할 방의 위치의 목록이 주어질 때, 최소 몇 단위시간만에 모든 학생들이 이동할 수 있는지를 구하시오.

'''

import sys
sys.stdin = open('sample_input.txt', 'r')

T = int(input())
for tc in range(1, T+1):
    N = int(input())
    arr = [list(map(int, input().split())) for _ in range(N)]
    tmp = [0] * 200

    for a in arr:
        if a[1] < a[0]: # 작은 수, 큰 수로 정리
            a, b = a[1], a[0]
        else:
            a, b = a[0], a[1]
        for i in range((a-1)//2, (b-1)//2+1): # 사용한 복도 인덱스에 1 더하기
            tmp[i] += 1

    ans = 0
    for t in tmp: # 최대 사용 횟수이 곧 필요한 단위시간
        if t > ans:
            ans = t
    print(f'#{tc}', ans)